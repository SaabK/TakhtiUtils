{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","xmlns","style","display","id","symbolID","fill","viewBox","d","directory","className","type","role","width","height","aria-label","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","xlinkHref","msg","About","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","listStyle","Navbar","mode","to","title","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","wordCount","split","length","heading","rows","value","onChange","event","target","placeholder","backgroundColor","color","upperedText","showAlert","loweredText","newText","copiedText","document","getElementById","select","navigator","clipboard","writeText","spacedText","join","App","setMode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.91ab433d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: \"none\" }}>\r\n                <symbol id={props.alert.symbolID} fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                    <path d={props.alert.directory} />\r\n                </symbol>\r\n            </svg>\r\n            <div className={`alert alert-${props.alert.type} d-flex align-items-center`} role=\"alert\">\r\n                <svg className=\"bi flex-shrink-0 me-2\" width=\"24\" height=\"24\" role=\"img\" aria-label={`${capitalize(props.alert.type)}:`}><use xlinkHref={`#${props.alert.symbolID}`} /></svg>\r\n                <div>\r\n                    {props.alert.msg}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n//     <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n// </div>","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center my-3\">About TakhtiUtils</h2>\r\n            <p className=\"About-Us-Para\"><strong>TakhtiUtils</strong> is a Text-Based Application, that helps with writing text. This is an Application made by Ali Bin Naseer. This application includes features, such as <strong className=\"underline-this\">Removing Extra Spaces</strong> from the text, <strong className=\"underline-this\">Capitalizing the text</strong> And Converting it to <strong className=\"underline-this\">UpperCase</strong> or <strong className=\"underline-this\">LowerCase</strong></p>\r\n        </div>\r\n        \r\n\r\n        <div className=\"container\">\r\n            <h2 className=\"text-center my-3\">FAQ's</h2>\r\n            <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                        <button className=\"accordion-button\"  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                            How can I contact the Owner?\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                        <div className=\"accordion-body text-color-black\" >\r\n                            You can contact me by E-mailing me at <code>AliIsWorking459@gmail.com</code>. I will reply whenever I am free ðŸ˜Š.\r\n                            <p><strong>Note: </strong>Do not E-mail me random things, Thank You!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\r\n                            Does Ali have Social Media?\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\r\n                        <div className=\"accordion-body text-color-black\" >\r\n                            Yes, I do use social media.\r\n                            <ul>\r\n                                <li style = {{listStyle: \"square\"}}>Instagram: <code>@BakwasBoye</code></li>\r\n                                <li style = {{listStyle: \"square\"}}>Twitter: <code>@AliBinTweets</code></li>\r\n                                <li style = {{listStyle: \"square\"}}>Discord: <code>discord.gg/BakwasBoy</code></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Link,\r\n  } from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" to=\"/TakhtiUtils/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n                <input className=\"form-check-input \" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className =\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Navbar.propTypes = {\r\n//     title: PropTypes.string,\r\n// };\r\n\r\n// Navbar.defaultProps = {\r\n//     title: \"Website name here!\"\r\n// };\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    // To change text, use setText('text changed')\r\n\r\n    const upperClick = () => {\r\n        let upperedText = text.toUpperCase();\r\n        setText(upperedText);\r\n        props.showAlert(\"Text was successfully converted to Uppercase\", \"success\", \"check-circle-fill\", \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\");\r\n    }\r\n\r\n    const lowerClick = () => {\r\n        let loweredText = text.toLowerCase();\r\n        setText(loweredText);\r\n        props.showAlert(\"Text was successfully converted to Lowercase\", \"success\", \"check-circle-fill\", \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\");\r\n    }\r\n\r\n    const clearClick = () => {\r\n        setText(\"\");\r\n        props.showAlert(\"Text was cleared!\", \"danger\", \"exclamation-triangle-fill\", \"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\");\r\n    }\r\n\r\n    const changeHandle = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const capClick = () => {\r\n        let firstChar = text.charAt(0); \r\n        let newText= firstChar.toUpperCase(); \r\n        setText(newText+text.slice(1)); \r\n        props.showAlert(\"Text was successfully Capitalized\", \"success\", \"check-circle-fill\", \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\");\r\n    }\r\n\r\n    const copyClick = () => {\r\n        let copiedText = document.getElementById(\"textBox\");\r\n        copiedText.select();\r\n        navigator.clipboard.writeText(copiedText.value);\r\n        props.showAlert(\"Copied to Clipboard\", \"success\", \"check-circle-fill\", \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\");\r\n    }\r\n\r\n    const spacesClick = () => {\r\n        let spacedText = text.split(/[ ]+/);\r\n        setText(spacedText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed\", \"success\", \"check-circle-fill\", \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\");\r\n        \r\n    }\r\n\r\n    let wordCount = text.split(\" \").length - 1;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container my-2\">\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"textBox\" rows=\"8\" value={text} onChange={changeHandle} placeholder={\"Start Typing...\"} style={{backgroundColor: `${props.mode==='dark'?'#0a0a0a':'white'}`, color: `${props.mode==='dark'?'white':'black'}`}}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary my-2\" onClick={upperClick}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={lowerClick}>Convert To Lowercase</button>\r\n            <button className=\"btn btn-primary my-2\" onClick={capClick}>Capitalize Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={copyClick}>Copy Text</button>\r\n            <button className=\"btn btn-primary my-2\" onClick={spacesClick}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-danger mx-2 my-2\" onClick={clearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-2\">\r\n            <h1>Text Info</h1>\r\n            <p><strong>{wordCount}</strong> words and <strong>{text.length}</strong> characters</p>\r\n            <p><strong>{(0.008*wordCount)}</strong> Minutes Read</p>\r\n\r\n            <h2>Preview</h2>\r\n            <p>{text.length===0?'Nothing to preview here...':text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\"\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type, symbolID, directory) => {\n    setAlert({\n      msg: message,\n      type: type,\n      symbolID: symbolID,\n      directory: directory\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 2100);\n  }\n\n  const toggleMode = () => {\n    if(mode === \"light\"){\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"rgb(21 25 30)\";  \n      document.body.style.color = \"white\";  // #dadce0\n      showAlert(\"Dark Mode has been Enabled\", \"success\", \"check-circle-fill\", \"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\");\n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n    }\n  }\n\n  return (\n    <Router>\n      <Navbar title=\"TakhtiUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <Switch>\n        <Route exact path=\"/About\">\n          <About/>\n        </Route>\n        <Route exact path=\"/TakhtiUtils/\" >\n          <TextForm mode={mode} showAlert={showAlert} heading=\"Enter Some Text:\"/>\n        </Route>\n      </Switch>\n      {/* <TextForm mode={mode} showAlert={showAlert} heading=\"Enter Some Text:\"/> */}\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (htmlFor example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}